# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PagniationMeta {
  totalCount: Float!
  currentPage: Float!
  hasNextPage: Boolean!
  totalPages: Float!
}

type User {
  _id: ID
  name: String
  email: String
  role: USER_ROLE!
  password: String!
  avatar: String
  accessToken: String
  phone: String
}

enum USER_ROLE {
  ADMIN
  MODERATOR
  CUSTOMER
}

type UserPagination {
  nodes: [User!]
  meta: PagniationMeta
}

type Post {
  _id: ID
  title: String!
  description: String
  status: POST_STATUS
  files: [String!]
  userId: User
  shareFrom: User
}

enum POST_STATUS {
  PUBLISHED
  BLOCKED
}

type PostPagination {
  nodes: [Post!]
  meta: PagniationMeta
}

type Comment {
  _id: ID
  message: String!
  file: String!
  userId: User!
  postId: Post!
}

type CommentPagination {
  nodes: [Comment!]
  meta: PagniationMeta
}

type Query {
  users(input: UserListQueryDto): UserPagination!
  user(input: CommonMatchInput!): User!
  posts(input: PostListQueryDto): PostPagination!
  post(input: CommonMatchInput!): Post!
  comments(payload: PostListQueryDto): CommentPagination!
  comment(payload: CommonMatchInput!): Comment!
}

input UserListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

enum SortType {
  ASC
  DESC
}

input CommonMatchInput {
  key: String!
  operator: MatchOperator!
  value: String
}

enum MatchOperator {
  eq
  ne
  gt
  gte
  lt
  lte
  in
  nin
  exists
  contains
}

enum WHERE_OPERATOR {
  and
  or
}

input PostListQueryDto {
  page: Int
  limit: Int
  sort: SortType
  sortBy: String
  where: [CommonMatchInput!]
  whereOperator: WHERE_OPERATOR
}

type Mutation {
  signUp(input: CreateUserInput!): Boolean!
  signIn(input: CreateUserInput!): User!
  adminSignIn(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): Boolean!
  removeUser(input: CommonMatchInput!): Boolean
  bulkRemoveUser(uIds: [String!]!): Boolean
  createPost(input: CreatePostInput!): Boolean!
  updatePost(input: UpdatePostInput!): Boolean!
  removePost(input: CommonMatchInput!): Boolean
  createComment(payload: CreateCommentInput!): Boolean!
  updateComment(input: UpdateCommentInput!): Boolean!
  removeComment(input: CommonMatchInput!): Boolean
}

input CreateUserInput {
  _id: ID

  """User name"""
  name: String

  """User email"""
  email: String!

  """User role"""
  role: USER_ROLE

  """User password"""
  password: String!

  """User avatar"""
  avatar: String
  accessToken: String
  phone: String
}

input UpdateUserInput {
  _id: String

  """User name"""
  name: String

  """User email"""
  email: String

  """User role"""
  role: USER_ROLE

  """User password"""
  password: String

  """User avatar"""
  avatar: String
  accessToken: String
  phone: String
}

input CreatePostInput {
  _id: ID
  title: String!
  description: String
  status: POST_STATUS = PUBLISHED
  files: [String!]
  userId: String!
  shareFrom: String
}

input UpdatePostInput {
  _id: String!
  title: String
  description: String
  status: POST_STATUS = PUBLISHED
  files: [String!]
  userId: String
  shareFrom: String
}

input CreateCommentInput {
  _id: ID
  message: String!
  file: String
  userId: String!
  postId: String
}

input UpdateCommentInput {
  _id: String!
  message: String
  file: String
  userId: String
  postId: String
}